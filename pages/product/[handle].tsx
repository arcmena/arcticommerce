import { useState } from 'react'
import { GetServerSideProps } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import cn from 'classnames'

import { shopifyClient } from '@shopify/client'
import { ProductWithVariants } from '@shopify/schema'
import { productDetailQuery } from '@shopify/queries/productDetailQuery'
import { getProductPrice } from '@shopify/utils/getProductPrice'

import Button from '@components/Elements/Button'
import { useCart } from '@components/common/Cart/Context'

import s from 'styles/pages/PDP.module.css'

type ProductDetailResultType = {
  productByHandle?: ProductWithVariants
}

export const getServerSideProps: GetServerSideProps = async props => {
  const { params } = props

  const { productByHandle } =
    await shopifyClient.request<ProductDetailResultType>(productDetailQuery, {
      handle: params!.handle
    })

  if (!productByHandle) {
    return {
      notFound: true
    }
  }

  return {
    props: {
      productResult: productByHandle
    }
  }
}

type ProductDetailPageProps = {
  productResult: ProductWithVariants
}

const PDP = ({ productResult }: ProductDetailPageProps) => {
  const { addProductToCart } = useCart()

  const [activeVariant, setActiveVariant] = useState(
    productResult.variants.edges[0].node
  )

  const handleAddToCart = async () => {
    const { id } = activeVariant

    // TODO: add loading state to button

    await addProductToCart(id)
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="">
        <div className="relative p-6 h-96">
          <Image
            src={productResult.images.edges[0].node.url}
            alt={productResult.images.edges[0].node.altText || ''}
            fill
            style={{ objectFit: 'cover' }}
          />
        </div>
        <div className="px-4 py-8">
          <div>
            <h1 className="text-black text-[22px] text-center">{productResult.title}</h1>
            <span className='mt-3 text-center block text-black text-[13px] uppercase tracking-widest'>{productResult.collections.edges[0].node.title}</span>
          </div>
          <div className='flex mt-4 tracking-widest'>
            <span className='text-base'>
              {getProductPrice({ price: activeVariant.price }).price}
            </span>
            <span className='text-[13px] line-through text-gray-600 h-fit align-bottom pt-[3px] ml-1'>
              {getProductPrice({ price: activeVariant.compareAtPrice }).price}
            </span>
          </div>

          <div className='mt-8'>
            <div>
              {productResult.options.map(({ name, values }) => (
                <div key={name}>
                  <span>{name}</span>

                  <ul className="ml-4">
                    {values.map(val => (
                      <li key={val}>
                        <button>{val}</button>
                      </li>
                    ))}
                  </ul>
                </div>
              ))}
            </div>
          </div>

          <div className='mt-8'>
            <Button onClick={handleAddToCart} variant={'filled'} className="w-full">Add to Cart</Button>
          </div>

          <div className={cn('mt-8', s['description-html'])} dangerouslySetInnerHTML={{ __html: productResult.descriptionHtml }} />
        </div>
      </div>
    </>
  )
}

export default PDP
